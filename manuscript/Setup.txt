# Setting up the project

This is not a book about Ruby on Rails development, so we are not going to
build an application from scratch. Instead, we're going to deploy a sample application
from the [elasticsearch-rails gem repository](https://github.com/elastic/elasticsearch-rails/tree/master/elasticsearch-rails).
This an example of how to integrate Elasticsearch to a Rails application.
This is how our final application is going to look like:

![Complete Web Application](images/complete-app.png)

The application it's basically a faceted browser for articles from the New York Times.
This articles are seeded into the database and indexed into an Elasticsearch cluster.

This application is distributed through several Rails templates available in the official repository of the gem.
I just made some small modifications in order to dockerize the application and also pushed the 
final result to a public repository under my GitHub account.
I've also added a Vagrantfile that's going to give us an environment ready for
running the dockerized application. This way you don't have to install anything except Vagrant and
its dependencies on your local machine.

## Getting the source code

First, clone the repository on your local machine:

    git clone git@github.com:pacuna/searchapp.git

Now you'll have access to all the necessary files for testing the application locally and
for deploying with Amazon ECS.

Once you have your DockerHub account ready, create a new public repository and name it
"yourusername/searchapp". We are going to push our container images to that repository in order
to pull them from ECS.

Finally, you'll need the AWS CLI tool for accessing the Amazon AWS api.
For setup instructions, visit [this link](https://aws.amazon.com/cli/)

Once you installed this tool, you can configure it to use your credentials by running

    $ aws configure

